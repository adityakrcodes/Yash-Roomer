{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\OneDrive\\\\Desktop\\\\Roomer\\\\client\\\\src\\\\views\\\\DashboardPage\\\\DashboardPage.jsx\";\nimport React, { Component } from 'react';\nimport './DashboardPage.css';\nimport { UserPanel, NotificationPanel } from \"../../components/dashboardPageComponents/index.js\";\nimport { checkSession, getUsers, getPosts } from \"./../../actions/admin\";\nimport PostManagement from \"./../../components/dashboardPageComponents/PostManagement/PostManagement\";\nimport UserManagement from \"./../../components/dashboardPageComponents/UserManagement/UserManagement\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class DashboardPage extends Component {\n  constructor() {\n    super();\n    this.state = {\n      view: \"userManagement\",\n      notifications: [],\n      userName: '',\n      userId: '',\n      users: [],\n      posts: []\n    };\n  }\n  changeView(viewChange) {\n    this.setState({\n      view: viewChange\n    });\n  }\n  updatePosts() {\n    getPosts(this);\n  }\n  updateUsers() {\n    getUsers(this);\n  }\n  componentDidMount() {\n    // when server and database is set up, this data\n    // will be retrieved here\n    // this.setState({ dashboardInfo: data })\n    checkSession(this);\n    this.updateUsers();\n    this.updatePosts();\n  }\n  render() {\n    const {\n      view,\n      notifications,\n      userName,\n      users,\n      posts\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(UserPanel, {\n        changeView: viewChange => this.changeView(viewChange),\n        userName: userName,\n        view: view\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"dashboardView\",\n        children: [view === 'dashboard' && /*#__PURE__*/_jsxDEV(NotificationPanel, {\n          notifications: notifications\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 44\n        }, this), view === 'userManagement' && /*#__PURE__*/_jsxDEV(UserManagement, {\n          updateUsers: () => this.updateUsers(),\n          users: users\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 49\n        }, this), view === 'postManagement' && /*#__PURE__*/_jsxDEV(PostManagement, {\n          updatePosts: () => this.updatePosts(),\n          posts: posts\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 49\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this);\n  }\n}\nexport default DashboardPage;","map":{"version":3,"names":["React","Component","UserPanel","NotificationPanel","checkSession","getUsers","getPosts","PostManagement","UserManagement","jsxDEV","_jsxDEV","DashboardPage","constructor","state","view","notifications","userName","userId","users","posts","changeView","viewChange","setState","updatePosts","updateUsers","componentDidMount","render","children","fileName","_jsxFileName","lineNumber","columnNumber","id"],"sources":["C:/Users/HP/OneDrive/Desktop/Roomer/client/src/views/DashboardPage/DashboardPage.jsx"],"sourcesContent":["import React, { Component } from 'react';\nimport './DashboardPage.css';\nimport { UserPanel, NotificationPanel } from \"../../components/dashboardPageComponents/index.js\";\nimport {checkSession, getUsers, getPosts} from \"./../../actions/admin\";\nimport PostManagement from \"./../../components/dashboardPageComponents/PostManagement/PostManagement\";\nimport UserManagement from \"./../../components/dashboardPageComponents/UserManagement/UserManagement\";\n\nexport class DashboardPage extends Component {\n\n    constructor() {\n        super()\n        this.state = {\n            view: \"userManagement\",\n            notifications: [],\n            userName: '',\n            userId: '',\n            users: [],\n            posts: []\n        }\n    }\n\n    changeView(viewChange) {\n        this.setState({view: viewChange})\n    }\n\n    updatePosts(){\n        getPosts(this);\n    }\n    \n    updateUsers(){\n        getUsers(this);\n    }\n\n    componentDidMount() {\n        // when server and database is set up, this data\n        // will be retrieved here\n        // this.setState({ dashboardInfo: data })\n        checkSession(this);\n        this.updateUsers()\n        this.updatePosts()\n    }\n\n    render() {\n        const {view, notifications, userName, users, posts} = this.state;\n        return (\n            <div>\n                <UserPanel changeView={(viewChange)=>this.changeView(viewChange)} userName={userName} view={view} />\n                <div id='dashboardView'>\n                    {view==='dashboard' && <NotificationPanel notifications={notifications}/>}\n                    {view==='userManagement' && <UserManagement updateUsers = {() => this.updateUsers()} users = {users} />}\n                    {view==='postManagement' && <PostManagement updatePosts = {() => this.updatePosts()} posts = {posts} />}\n                </div>\n                \n            </div>\n        )\n    }\n}\n\nexport default DashboardPage;\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,OAAO,qBAAqB;AAC5B,SAASC,SAAS,EAAEC,iBAAiB,QAAQ,mDAAmD;AAChG,SAAQC,YAAY,EAAEC,QAAQ,EAAEC,QAAQ,QAAO,uBAAuB;AACtE,OAAOC,cAAc,MAAM,0EAA0E;AACrG,OAAOC,cAAc,MAAM,0EAA0E;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtG,OAAO,MAAMC,aAAa,SAASV,SAAS,CAAC;EAEzCW,WAAWA,CAAA,EAAG;IACV,KAAK,CAAC,CAAC;IACP,IAAI,CAACC,KAAK,GAAG;MACTC,IAAI,EAAE,gBAAgB;MACtBC,aAAa,EAAE,EAAE;MACjBC,QAAQ,EAAE,EAAE;MACZC,MAAM,EAAE,EAAE;MACVC,KAAK,EAAE,EAAE;MACTC,KAAK,EAAE;IACX,CAAC;EACL;EAEAC,UAAUA,CAACC,UAAU,EAAE;IACnB,IAAI,CAACC,QAAQ,CAAC;MAACR,IAAI,EAAEO;IAAU,CAAC,CAAC;EACrC;EAEAE,WAAWA,CAAA,EAAE;IACTjB,QAAQ,CAAC,IAAI,CAAC;EAClB;EAEAkB,WAAWA,CAAA,EAAE;IACTnB,QAAQ,CAAC,IAAI,CAAC;EAClB;EAEAoB,iBAAiBA,CAAA,EAAG;IAChB;IACA;IACA;IACArB,YAAY,CAAC,IAAI,CAAC;IAClB,IAAI,CAACoB,WAAW,CAAC,CAAC;IAClB,IAAI,CAACD,WAAW,CAAC,CAAC;EACtB;EAEAG,MAAMA,CAAA,EAAG;IACL,MAAM;MAACZ,IAAI;MAAEC,aAAa;MAAEC,QAAQ;MAAEE,KAAK;MAAEC;IAAK,CAAC,GAAG,IAAI,CAACN,KAAK;IAChE,oBACIH,OAAA;MAAAiB,QAAA,gBACIjB,OAAA,CAACR,SAAS;QAACkB,UAAU,EAAGC,UAAU,IAAG,IAAI,CAACD,UAAU,CAACC,UAAU,CAAE;QAACL,QAAQ,EAAEA,QAAS;QAACF,IAAI,EAAEA;MAAK;QAAAc,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACpGrB,OAAA;QAAKsB,EAAE,EAAC,eAAe;QAAAL,QAAA,GAClBb,IAAI,KAAG,WAAW,iBAAIJ,OAAA,CAACP,iBAAiB;UAACY,aAAa,EAAEA;QAAc;UAAAa,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAC,CAAC,EACxEjB,IAAI,KAAG,gBAAgB,iBAAIJ,OAAA,CAACF,cAAc;UAACgB,WAAW,EAAIA,CAAA,KAAM,IAAI,CAACA,WAAW,CAAC,CAAE;UAACN,KAAK,EAAIA;QAAM;UAAAU,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,EACtGjB,IAAI,KAAG,gBAAgB,iBAAIJ,OAAA,CAACH,cAAc;UAACgB,WAAW,EAAIA,CAAA,KAAM,IAAI,CAACA,WAAW,CAAC,CAAE;UAACJ,KAAK,EAAIA;QAAM;UAAAS,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACtG,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEL,CAAC;EAEd;AACJ;AAEA,eAAepB,aAAa","ignoreList":[]},"metadata":{},"sourceType":"module"}