{"ast":null,"code":"import React,{Component}from'react';import'./DashboardPage.css';import{UserPanel,NotificationPanel}from\"../../components/dashboardPageComponents/index.js\";import{checkSession,getUsers,getPosts}from\"./../../actions/admin\";import PostManagement from\"./../../components/dashboardPageComponents/PostManagement/PostManagement\";import UserManagement from\"./../../components/dashboardPageComponents/UserManagement/UserManagement\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";export class DashboardPage extends Component{constructor(){super();this.state={view:\"userManagement\",notifications:[],userName:'',userId:'',users:[],posts:[]};}changeView(viewChange){this.setState({view:viewChange});}updatePosts(){getPosts(this);}updateUsers(){getUsers(this);}componentDidMount(){// when server and database is set up, this data\n// will be retrieved here\n// this.setState({ dashboardInfo: data })\ncheckSession(this);this.updateUsers();this.updatePosts();}render(){const{view,notifications,userName,users,posts}=this.state;return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(UserPanel,{changeView:viewChange=>this.changeView(viewChange),userName:userName,view:view}),/*#__PURE__*/_jsxs(\"div\",{id:\"dashboardView\",children:[view==='dashboard'&&/*#__PURE__*/_jsx(NotificationPanel,{notifications:notifications}),view==='userManagement'&&/*#__PURE__*/_jsx(UserManagement,{updateUsers:()=>this.updateUsers(),users:users}),view==='postManagement'&&/*#__PURE__*/_jsx(PostManagement,{updatePosts:()=>this.updatePosts(),posts:posts})]})]});}}export default DashboardPage;","map":{"version":3,"names":["React","Component","UserPanel","NotificationPanel","checkSession","getUsers","getPosts","PostManagement","UserManagement","jsx","_jsx","jsxs","_jsxs","DashboardPage","constructor","state","view","notifications","userName","userId","users","posts","changeView","viewChange","setState","updatePosts","updateUsers","componentDidMount","render","children","id"],"sources":["D:/Projects/Roomer/client/src/views/DashboardPage/DashboardPage.jsx"],"sourcesContent":["import React, { Component } from 'react';\nimport './DashboardPage.css';\nimport { UserPanel, NotificationPanel } from \"../../components/dashboardPageComponents/index.js\";\nimport {checkSession, getUsers, getPosts} from \"./../../actions/admin\";\nimport PostManagement from \"./../../components/dashboardPageComponents/PostManagement/PostManagement\";\nimport UserManagement from \"./../../components/dashboardPageComponents/UserManagement/UserManagement\";\n\nexport class DashboardPage extends Component {\n\n    constructor() {\n        super()\n        this.state = {\n            view: \"userManagement\",\n            notifications: [],\n            userName: '',\n            userId: '',\n            users: [],\n            posts: []\n        }\n    }\n\n    changeView(viewChange) {\n        this.setState({view: viewChange})\n    }\n\n    updatePosts(){\n        getPosts(this);\n    }\n    \n    updateUsers(){\n        getUsers(this);\n    }\n\n    componentDidMount() {\n        // when server and database is set up, this data\n        // will be retrieved here\n        // this.setState({ dashboardInfo: data })\n        checkSession(this);\n        this.updateUsers()\n        this.updatePosts()\n    }\n\n    render() {\n        const {view, notifications, userName, users, posts} = this.state;\n        return (\n            <div>\n                <UserPanel changeView={(viewChange)=>this.changeView(viewChange)} userName={userName} view={view} />\n                <div id='dashboardView'>\n                    {view==='dashboard' && <NotificationPanel notifications={notifications}/>}\n                    {view==='userManagement' && <UserManagement updateUsers = {() => this.updateUsers()} users = {users} />}\n                    {view==='postManagement' && <PostManagement updatePosts = {() => this.updatePosts()} posts = {posts} />}\n                </div>\n                \n            </div>\n        )\n    }\n}\n\nexport default DashboardPage;\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,SAAS,KAAQ,OAAO,CACxC,MAAO,qBAAqB,CAC5B,OAASC,SAAS,CAAEC,iBAAiB,KAAQ,mDAAmD,CAChG,OAAQC,YAAY,CAAEC,QAAQ,CAAEC,QAAQ,KAAO,uBAAuB,CACtE,MAAO,CAAAC,cAAc,KAAM,0EAA0E,CACrG,MAAO,CAAAC,cAAc,KAAM,0EAA0E,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAEtG,MAAO,MAAM,CAAAC,aAAa,QAAS,CAAAZ,SAAU,CAEzCa,WAAWA,CAAA,CAAG,CACV,KAAK,CAAC,CAAC,CACP,IAAI,CAACC,KAAK,CAAG,CACTC,IAAI,CAAE,gBAAgB,CACtBC,aAAa,CAAE,EAAE,CACjBC,QAAQ,CAAE,EAAE,CACZC,MAAM,CAAE,EAAE,CACVC,KAAK,CAAE,EAAE,CACTC,KAAK,CAAE,EACX,CAAC,CACL,CAEAC,UAAUA,CAACC,UAAU,CAAE,CACnB,IAAI,CAACC,QAAQ,CAAC,CAACR,IAAI,CAAEO,UAAU,CAAC,CAAC,CACrC,CAEAE,WAAWA,CAAA,CAAE,CACTnB,QAAQ,CAAC,IAAI,CAAC,CAClB,CAEAoB,WAAWA,CAAA,CAAE,CACTrB,QAAQ,CAAC,IAAI,CAAC,CAClB,CAEAsB,iBAAiBA,CAAA,CAAG,CAChB;AACA;AACA;AACAvB,YAAY,CAAC,IAAI,CAAC,CAClB,IAAI,CAACsB,WAAW,CAAC,CAAC,CAClB,IAAI,CAACD,WAAW,CAAC,CAAC,CACtB,CAEAG,MAAMA,CAAA,CAAG,CACL,KAAM,CAACZ,IAAI,CAAEC,aAAa,CAAEC,QAAQ,CAAEE,KAAK,CAAEC,KAAK,CAAC,CAAG,IAAI,CAACN,KAAK,CAChE,mBACIH,KAAA,QAAAiB,QAAA,eACInB,IAAA,CAACR,SAAS,EAACoB,UAAU,CAAGC,UAAU,EAAG,IAAI,CAACD,UAAU,CAACC,UAAU,CAAE,CAACL,QAAQ,CAAEA,QAAS,CAACF,IAAI,CAAEA,IAAK,CAAE,CAAC,cACpGJ,KAAA,QAAKkB,EAAE,CAAC,eAAe,CAAAD,QAAA,EAClBb,IAAI,GAAG,WAAW,eAAIN,IAAA,CAACP,iBAAiB,EAACc,aAAa,CAAEA,aAAc,CAAC,CAAC,CACxED,IAAI,GAAG,gBAAgB,eAAIN,IAAA,CAACF,cAAc,EAACkB,WAAW,CAAIA,CAAA,GAAM,IAAI,CAACA,WAAW,CAAC,CAAE,CAACN,KAAK,CAAIA,KAAM,CAAE,CAAC,CACtGJ,IAAI,GAAG,gBAAgB,eAAIN,IAAA,CAACH,cAAc,EAACkB,WAAW,CAAIA,CAAA,GAAM,IAAI,CAACA,WAAW,CAAC,CAAE,CAACJ,KAAK,CAAIA,KAAM,CAAE,CAAC,EACtG,CAAC,EAEL,CAAC,CAEd,CACJ,CAEA,cAAe,CAAAR,aAAa","ignoreList":[]},"metadata":{},"sourceType":"module"}